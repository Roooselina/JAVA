package Tile;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class TileRead {
	public static void main(String[] args) {

        String Cave1 = "/gameBackground/동굴1.txt"; // 파일 경로 설정
        int[][] matrix = readMatrixFromFile(Cave1);

        // 행렬 출력 (확인용)
        if (matrix != null) {
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[i].length; j++) {
                    System.out.print(matrix[i][j] + " ");
                }
                System.out.println();
            }
        }
    }

    public static int[][] readMatrixFromFile(String filePath) {
        int[][] matrix = null;

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            int row = 0;

            // 먼저 파일의 행과 열 개수를 읽어와서 행렬 크기를 결정합니다.
            int rows = 0;
            int cols = 0;

            while ((line = br.readLine()) != null) {
                if (rows == 0) {
                    // 첫 번째 줄의 열 개수를 결정합니다.
                    cols = line.split(" ").length;
                }
                rows++;
            }

            // 행렬 초기화
            matrix = new int[rows][cols];

            // 파일을 다시 읽어들여 행렬에 값을 저장합니다.
            br.close();
            br = new BufferedReader(new FileReader(filePath));
            while ((line = br.readLine()) != null) {
                String[] tokens = line.split(" ");
                for (int col = 0; col < tokens.length; col++) {
                    matrix[row][col] = Integer.parseInt(tokens[col]);
                }
                row++;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return matrix;
    }
}
