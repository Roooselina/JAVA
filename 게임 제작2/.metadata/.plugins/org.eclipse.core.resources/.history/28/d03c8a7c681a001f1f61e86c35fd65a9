package main;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

public class UI {
	GamePanel gp;
	Font font, pauseFont, titleFont;

	public UI(GamePanel gp) {
		this.gp = gp;
		font = new Font("빛의 계승자 Regular", Font.PLAIN, 20);
		pauseFont = new Font("빛의 계승자 Bold", Font.PLAIN, 40);
		titleFont = new Font("빛의 계승자 Bold", Font.PLAIN, 80);
	}

	public void draw(Graphics2D g2) {

		if (gp.gameState == gp.titleState) {
			drawTitleScreen(g2);
		}
	}

	public void drawTitleScreen(Graphics2D g2) {
        try {
            BufferedImage logoImage = ImageIO.read(getClass().getResourceAsStream("/logo/로고.png"));
            int imageX =  logoImage.getWidth() / 2;
            int imageY = ( logoImage.getHeight()) / 2;
            g2.drawImage(logoImage, imageX, imageY, null);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

	public void drawPlayerName(Graphics2D g2) {
		// 글자의 너비와 높이 계산
		FontMetrics fontMetrics = g2.getFontMetrics(font);
		int textWidth = fontMetrics.stringWidth("Player");
		int textHeight = fontMetrics.getHeight();

		// 투명도가 30%인 흰색으로 설정
		g2.setColor(new Color(255, 255, 255, 77)); // 흰색 (255, 255, 255), 투명도 30%인 경우 77로 설정

		// 직사각형 그리기
		g2.fillRect(90, 90 - fontMetrics.getAscent(), textWidth, textHeight);

		// 글자 그리기
		g2.setFont(font);
		g2.setColor(Color.black);
		g2.drawString("Player", 90, 90);
	}

	public void drawPause(Graphics2D g2) {
		if (gp.gameState == gp.pauseState) { // pause 상태일 때만 "PAUSE"를 그립니다.
			g2.setFont(pauseFont);
			g2.setColor(new Color(0, 0, 0, 153)); // 60% 투명도 검정색

			String pauseText = "PAUSE";

			int textWidth = g2.getFontMetrics().stringWidth(pauseText); // 문자열의 너비 계산
			int textHeight = g2.getFontMetrics().getHeight(); // 문자열의 높이 계산
			int centerX = (gp.screenWidth - textWidth) / 2; // X축 중앙 위치 계산
			int centerY = (gp.screenHeight - textHeight) / 2 + 20; // Y축 중앙 위치 계산

			g2.fillRect(centerX - 10, centerY - 10, textWidth + 20, textHeight); // 직사각형 그리기
			g2.setColor(Color.white);
			g2.drawString(pauseText, centerX, centerY + textHeight / 2); // "PAUSE" 문자열 그리기
		}
	}

	public int getXforCentredText(String text, Graphics2D g2) {

		int length = (int) g2.getFontMetrics().getStringBounds(text, g2).getWidth();
		int x = gp.screenWidth / 2 - length / 2;
		return x;

	}

}
