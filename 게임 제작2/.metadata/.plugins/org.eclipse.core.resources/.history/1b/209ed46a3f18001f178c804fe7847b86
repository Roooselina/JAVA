package Tile;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import main.GamePanel;

public class TileManager {

    GamePanel gp;
    int[][] mapTileNum;
    Tile[] tile;
    TileRead tileReader;

    String Cave1 = "/gameBackground/동굴1.txt"; // 파일 경로 설정 (패키지 경로에 맞게 수정)

    public TileManager(GamePanel gp) {
        this.gp = gp;
        tile = new Tile[10]; // 타일 종류
        getTileImage();
        tileReader = new TileRead(gp);
        mapTileNum = tileReader.loadMap(Cave1); // 초기화된 배열을 직접 가져옴
        System.out.println(mapTileNum);
    }

    public void getTileImage() {
        try {
            tile[0] = new Tile();
            tile[0].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌바닥.png"));
            tile[1] = new Tile();
            tile[1].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌바닥2.png"));
            tile[2] = new Tile();
            tile[2].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌바닥3.png"));
            tile[3] = new Tile();
            tile[3].image = ImageIO.read(getClass().getResourceAsStream("/tiles/버튼.png"));
            tile[4] = new Tile();
            tile[4].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌벽_상.png"));
            tile[5] = new Tile();
            tile[5].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌벽_중.png"));
            tile[6] = new Tile();
            tile[6].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌벽_하.png"));
            tile[7] = new Tile();
            tile[7].image = ImageIO.read(getClass().getResourceAsStream("/tiles/돌벽_꼭대기.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void draw(Graphics2D g2) {
        int worldCol = 0;
        int worldRow = 0;

        while (worldCol < gp.getMaxWorldCol() && worldRow < gp.getMaxWorldRow()) {
            int tileNum = mapTileNum[worldCol][worldRow];
            
            int worldX = worldCol * gp.getOrigianlCharacterSize();
            int worldY = worldRow * gp.getOrigianlCharacterSize();
            int screenX = worldX - gp.player.worldX+ gp.player.screenX;
            int screenY = worldY - gp.player.worldY+ gp.player.screenY;
            
            g2.drawImage(tile[tileNum].image, screenX, screenY, gp.getOrigianlCharacterSize(), gp.getOrigianlCharacterSize(), null);
            worldCol++;
            
            if (worldCol == gp.getMaxScreenCol()) {
            	worldCol = 0;
            	worldRow++;

            }
        }
    }
}
